2019/07/21 18:20:55 [INFO] Terraform version: 0.12.3  
2019/07/21 18:20:55 [INFO] Go runtime version: go1.12.4
2019/07/21 18:20:55 [INFO] CLI args: []string{"/usr/local/bin/terraform", "init"}
2019/07/21 18:20:55 [DEBUG] Attempting to open CLI config file: /home/siva/.terraformrc
2019/07/21 18:20:55 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2019/07/21 18:20:55 [INFO] CLI command args: []string{"init"}
2019/07/21 18:20:55 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2019/07/21 18:20:55 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2019/07/21 18:20:55 [DEBUG] New state was assigned lineage "dba584e1-2575-d2c4-a2b3-8780d7624a2c"
2019/07/21 18:20:55 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2019/07/21 18:20:55 [TRACE] Meta.Backend: instantiated backend of type <nil>
2019/07/21 18:20:55 [DEBUG] checking for provider in "."
2019/07/21 18:20:55 [DEBUG] checking for provider in "/usr/local/bin"
2019/07/21 18:20:55 [DEBUG] checking for provisioner in "."
2019/07/21 18:20:55 [DEBUG] checking for provisioner in "/usr/local/bin"
2019/07/21 18:20:55 [INFO] Failed to read plugin lock file .terraform/plugins/linux_amd64/lock.json: open .terraform/plugins/linux_amd64/lock.json: no such file or directory
2019/07/21 18:20:55 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2019/07/21 18:20:55 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2019/07/21 18:20:55 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2019/07/21 18:20:55 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2019/07/21 18:20:55 [TRACE] statemgr.Filesystem: read nil snapshot
2019/07/21 18:20:55 [DEBUG] checking for provider in "."
2019/07/21 18:20:55 [DEBUG] checking for provider in "/usr/local/bin"
2019/07/21 18:20:55 [DEBUG] plugin requirements: "random"=""
2019/07/21 18:20:55 [DEBUG] plugin requirements: "google"=""
2019/07/21 18:20:55 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2019/07/21 18:20:57 [DEBUG] fetching provider versions from "https://registry.terraform.io/v1/providers/-/random/versions"
2019/07/21 18:20:57 [DEBUG] fetching provider location from "https://registry.terraform.io/v1/providers/terraform-providers/random/2.1.2/download/linux/amd64"
2019/07/21 18:20:58 [DEBUG] verified GPG signature with key from HashiCorp Security <security@hashicorp.com>
2019/07/21 18:20:58 [DEBUG] getting provider "random" (terraform-providers/random) version "2.1.2"
2019/07/21 18:20:58 [DEBUG] plugin cache is disabled, so downloading random 2.1.2 from https://releases.hashicorp.com/terraform-provider-random/2.1.2/terraform-provider-random_2.1.2_linux_amd64.zip?checksum=sha256:cbfc6f63501a57ca891d29cfeac39a7dd5753ff24f89c5be5bb97d0bd3c84a98
2019/07/21 18:22:21 [DEBUG] looking for the random 2.1.2 plugin we just installed
2019/07/21 18:22:21 [DEBUG] checking for provider in ".terraform/plugins/linux_amd64"
2019/07/21 18:22:21 [DEBUG] found provider "terraform-provider-random_v2.1.2_x4"
2019/07/21 18:22:21 [DEBUG] all plugins found discovery.PluginMetaSet{discovery.PluginMeta{Name:"random", Version:"2.1.2", Path:"/mnt/c/Users/Indira Siva/OneDrive/Terraform_Scripts/gcp_one/gcp_storage/.terraform/plugins/linux_amd64/terraform-provider-random_v2.1.2_x4"}:struct {}{}}
2019/07/21 18:22:21 [DEBUG] filtered plugins discovery.PluginMetaSet{discovery.PluginMeta{Name:"random", Version:"2.1.2", Path:"/mnt/c/Users/Indira Siva/OneDrive/Terraform_Scripts/gcp_one/gcp_storage/.terraform/plugins/linux_amd64/terraform-provider-random_v2.1.2_x4"}:struct {}{}}
2019/07/21 18:22:21 [DEBUG] fetching provider versions from "https://registry.terraform.io/v1/providers/-/google/versions"
2019/07/21 18:22:24 [DEBUG] fetching provider location from "https://registry.terraform.io/v1/providers/terraform-providers/google/2.11.0/download/linux/amd64"
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x50 pc=0xce6894]

goroutine 1 [running]:
github.com/hashicorp/terraform/plugin/discovery.(*ProviderInstaller).Get(0xc000499570, 0xc0005c4300, 0x6, 0x3311ca0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/opt/teamcity-agent/work/9e329aa031982669/src/github.com/hashicorp/terraform/plugin/discovery/get.go:207 +0xf04
github.com/hashicorp/terraform/command.(*InitCommand).getProviders(0xc0004b5040, 0xc0001224d0, 0x0, 0x0, 0xc000432580, 0x0, 0x0, 0x0)
	/opt/teamcity-agent/work/9e329aa031982669/src/github.com/hashicorp/terraform/command/init.go:497 +0x415
github.com/hashicorp/terraform/command.(*InitCommand).Run(0xc0004b5040, 0xc0000ba030, 0x0, 0x0, 0xc00044ae60)
	/opt/teamcity-agent/work/9e329aa031982669/src/github.com/hashicorp/terraform/command/init.go:338 +0x1021
github.com/mitchellh/cli.(*CLI).Run(0xc00040b7c0, 0xc00040b7c0, 0xc000267d90, 0x1)
	/opt/teamcity-agent/work/9e329aa031982669/pkg/mod/github.com/mitchellh/cli@v1.0.0/cli.go:255 +0x1f1
main.wrappedMain(0x0)
	/opt/teamcity-agent/work/9e329aa031982669/src/github.com/hashicorp/terraform/main.go:223 +0xaff
main.realMain(0x0)
	/opt/teamcity-agent/work/9e329aa031982669/src/github.com/hashicorp/terraform/main.go:100 +0xb4
main.main()
	/opt/teamcity-agent/work/9e329aa031982669/src/github.com/hashicorp/terraform/main.go:36 +0x3b
